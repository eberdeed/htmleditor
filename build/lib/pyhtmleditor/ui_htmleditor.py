# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'uifiles/htmleditor.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_HTMLEditor(object):
    def setupUi(self, HTMLEditor):
        HTMLEditor.setObjectName("HTMLEditor")
        HTMLEditor.resize(800, 579)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(HTMLEditor.sizePolicy().hasHeightForWidth())
        HTMLEditor.setSizePolicy(sizePolicy)
        HTMLEditor.setSizeIncrement(QtCore.QSize(5, 5))
        HTMLEditor.setBaseSize(QtCore.QSize(800, 600))
        font = QtGui.QFont()
        font.setPointSize(14)
        HTMLEditor.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/htmledit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        HTMLEditor.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(HTMLEditor)
        self.centralwidget.setObjectName("centralwidget")
        self.tagList = QtWidgets.QListWidget(self.centralwidget)
        self.tagList.setGeometry(QtCore.QRect(10, 395, 388, 115))
        self.tagList.setObjectName("tagList")
        self.cssList = QtWidgets.QListWidget(self.centralwidget)
        self.cssList.setGeometry(QtCore.QRect(400, 400, 390, 115))
        self.cssList.setObjectName("cssList")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 791, 381))
        self.tabWidget.setObjectName("tabWidget")
        self.tab1 = QtWidgets.QWidget()
        self.tab1.setObjectName("tab1")
        self.tabWidget.addTab(self.tab1, "")
        self.tab2 = QtWidgets.QWidget()
        self.tab2.setObjectName("tab2")
        self.tabWidget.addTab(self.tab2, "")
        HTMLEditor.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(HTMLEditor)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 38))
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuTabs = QtWidgets.QMenu(self.menubar)
        self.menuTabs.setObjectName("menuTabs")
        HTMLEditor.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(HTMLEditor)
        self.statusbar.setObjectName("statusbar")
        HTMLEditor.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(HTMLEditor)
        self.toolBar.setObjectName("toolBar")
        HTMLEditor.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionNew = QtWidgets.QAction(HTMLEditor)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/filenew.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon1)
        self.actionNew.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(HTMLEditor)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/fileopen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon2)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(HTMLEditor)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/filesave.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon3)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(HTMLEditor)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/filesaveas.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave_As.setIcon(icon4)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionClose = QtWidgets.QAction(HTMLEditor)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/fileclose.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClose.setIcon(icon5)
        self.actionClose.setObjectName("actionClose")
        self.actionClose_All = QtWidgets.QAction(HTMLEditor)
        self.actionClose_All.setIcon(icon5)
        self.actionClose_All.setObjectName("actionClose_All")
        self.actionPrint = QtWidgets.QAction(HTMLEditor)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/fileprint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPrint.setIcon(icon6)
        self.actionPrint.setObjectName("actionPrint")
        self.actionUndo = QtWidgets.QAction(HTMLEditor)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/undo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon7)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(HTMLEditor)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/redo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRedo.setIcon(icon8)
        self.actionRedo.setObjectName("actionRedo")
        self.actionCut = QtWidgets.QAction(HTMLEditor)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/editcut.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon9)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(HTMLEditor)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/editcopy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon10)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(HTMLEditor)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/editpaste.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon11)
        self.actionPaste.setObjectName("actionPaste")
        self.actionFind_and_Replace = QtWidgets.QAction(HTMLEditor)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/find.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFind_and_Replace.setIcon(icon12)
        self.actionFind_and_Replace.setObjectName("actionFind_and_Replace")
        self.actionSelect_All = QtWidgets.QAction(HTMLEditor)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/selectall.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSelect_All.setIcon(icon13)
        self.actionSelect_All.setObjectName("actionSelect_All")
        self.actionExit = QtWidgets.QAction(HTMLEditor)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon14)
        self.actionExit.setObjectName("actionExit")
        self.actionHelp = QtWidgets.QAction(HTMLEditor)
        self.actionHelp.setIcon(icon)
        self.actionHelp.setObjectName("actionHelp")
        self.actionAbout_HTML_Editor = QtWidgets.QAction(HTMLEditor)
        self.actionAbout_HTML_Editor.setIcon(icon)
        self.actionAbout_HTML_Editor.setObjectName("actionAbout_HTML_Editor")
        self.actionTabList = QtWidgets.QAction(HTMLEditor)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/textedit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionTabList.setIcon(icon15)
        self.actionTabList.setObjectName("actionTabList")
        self.actionCloseAll = QtWidgets.QAction(HTMLEditor)
        self.actionCloseAll.setIcon(icon5)
        self.actionCloseAll.setObjectName("actionCloseAll")
        self.actionW3C_org_School = QtWidgets.QAction(HTMLEditor)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/w3cicon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionW3C_org_School.setIcon(icon16)
        self.actionW3C_org_School.setObjectName("actionW3C_org_School")
        self.actionDelete_Tags = QtWidgets.QAction(HTMLEditor)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/htmltags.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Tags.setIcon(icon17)
        self.actionDelete_Tags.setObjectName("actionDelete_Tags")
        self.actionWeb_Browser = QtWidgets.QAction(HTMLEditor)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/webbrowser.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionWeb_Browser.setIcon(icon18)
        self.actionWeb_Browser.setObjectName("actionWeb_Browser")
        self.actionHTML_To_Text = QtWidgets.QAction(HTMLEditor)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/texttohtml.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHTML_To_Text.setIcon(icon19)
        self.actionHTML_To_Text.setObjectName("actionHTML_To_Text")
        self.actionPreferences = QtWidgets.QAction(HTMLEditor)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap("../../../../usr/share/htmleditor/resources/configure.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPreferences.setIcon(icon20)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionSave_All = QtWidgets.QAction(HTMLEditor)
        self.actionSave_All.setIcon(icon3)
        self.actionSave_All.setObjectName("actionSave_All")
        self.actionHTML_and_CSS = QtWidgets.QAction(HTMLEditor)
        self.actionHTML_and_CSS.setIcon(icon)
        self.actionHTML_and_CSS.setObjectName("actionHTML_and_CSS")
        self.actionSave_Preferences = QtWidgets.QAction(HTMLEditor)
        self.actionSave_Preferences.setIcon(icon3)
        self.actionSave_Preferences.setObjectName("actionSave_Preferences")
        self.actionLoad_Preferences = QtWidgets.QAction(HTMLEditor)
        self.actionLoad_Preferences.setIcon(icon2)
        self.actionLoad_Preferences.setObjectName("actionLoad_Preferences")
        self.actionCloseCurrent = QtWidgets.QAction(HTMLEditor)
        self.actionCloseCurrent.setIcon(icon5)
        self.actionCloseCurrent.setObjectName("actionCloseCurrent")
        self.actionNew_CSS = QtWidgets.QAction(HTMLEditor)
        self.actionNew_CSS.setIcon(icon1)
        self.actionNew_CSS.setObjectName("actionNew_CSS")
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionFind_and_Replace)
        self.menuEdit.addAction(self.actionSelect_All)
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addAction(self.actionAbout_HTML_Editor)
        self.menuHelp.addAction(self.actionW3C_org_School)
        self.menuHelp.addAction(self.actionPreferences)
        self.menuHelp.addAction(self.actionSave_Preferences)
        self.menuHelp.addAction(self.actionLoad_Preferences)
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionNew_CSS)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionSave_All)
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addAction(self.actionClose_All)
        self.menuFile.addAction(self.actionPrint)
        self.menuFile.addAction(self.actionExit)
        self.menuTabs.addAction(self.actionCloseCurrent)
        self.menuTabs.addAction(self.actionCloseAll)
        self.menuTabs.addAction(self.actionWeb_Browser)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuTabs.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(HTMLEditor)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(HTMLEditor)

    def retranslateUi(self, HTMLEditor):
        _translate = QtCore.QCoreApplication.translate
        HTMLEditor.setWindowTitle(_translate("HTMLEditor", "All Editors"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab1), _translate("HTMLEditor", "HTML Editor"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab2), _translate("HTMLEditor", "CSS Edtiro"))
        self.menuEdit.setTitle(_translate("HTMLEditor", "Edit"))
        self.menuHelp.setTitle(_translate("HTMLEditor", "Help"))
        self.menuFile.setTitle(_translate("HTMLEditor", "File"))
        self.menuTabs.setTitle(_translate("HTMLEditor", "Tabs"))
        self.toolBar.setWindowTitle(_translate("HTMLEditor", "toolBar"))
        self.actionNew.setText(_translate("HTMLEditor", "&New HTML"))
        self.actionNew.setShortcut(_translate("HTMLEditor", "Ctrl+N"))
        self.actionOpen.setText(_translate("HTMLEditor", "&Open"))
        self.actionOpen.setShortcut(_translate("HTMLEditor", "Ctrl+O"))
        self.actionSave.setText(_translate("HTMLEditor", "&Save"))
        self.actionSave.setShortcut(_translate("HTMLEditor", "Ctrl+S"))
        self.actionSave_As.setText(_translate("HTMLEditor", "Save As"))
        self.actionClose.setText(_translate("HTMLEditor", "Close"))
        self.actionClose_All.setText(_translate("HTMLEditor", "Close All"))
        self.actionPrint.setText(_translate("HTMLEditor", "Print"))
        self.actionUndo.setText(_translate("HTMLEditor", "&Undo"))
        self.actionUndo.setShortcut(_translate("HTMLEditor", "Ctrl+U"))
        self.actionRedo.setText(_translate("HTMLEditor", "&Redo"))
        self.actionRedo.setShortcut(_translate("HTMLEditor", "Ctrl+R"))
        self.actionCut.setText(_translate("HTMLEditor", "Cut Ctrl+X"))
        self.actionCut.setShortcut(_translate("HTMLEditor", "Ctrl+X"))
        self.actionCopy.setText(_translate("HTMLEditor", "&Copy"))
        self.actionCopy.setShortcut(_translate("HTMLEditor", "Ctrl+C"))
        self.actionPaste.setText(_translate("HTMLEditor", "Paste Ctrl+V"))
        self.actionPaste.setShortcut(_translate("HTMLEditor", "Ctrl+V"))
        self.actionFind_and_Replace.setText(_translate("HTMLEditor", "&Find and Replace"))
        self.actionFind_and_Replace.setShortcut(_translate("HTMLEditor", "Ctrl+F"))
        self.actionSelect_All.setText(_translate("HTMLEditor", "Select &All"))
        self.actionSelect_All.setShortcut(_translate("HTMLEditor", "Ctrl+A"))
        self.actionExit.setText(_translate("HTMLEditor", "Exit"))
        self.actionHelp.setText(_translate("HTMLEditor", "Help F1"))
        self.actionHelp.setShortcut(_translate("HTMLEditor", "F1"))
        self.actionAbout_HTML_Editor.setText(_translate("HTMLEditor", "About HTML Editor"))
        self.actionTabList.setText(_translate("HTMLEditor", "Tab List"))
        self.actionCloseAll.setText(_translate("HTMLEditor", "Close All"))
        self.actionW3C_org_School.setText(_translate("HTMLEditor", "W3C.org School F2"))
        self.actionW3C_org_School.setShortcut(_translate("HTMLEditor", "F2"))
        self.actionDelete_Tags.setText(_translate("HTMLEditor", "&Delete Tags"))
        self.actionDelete_Tags.setShortcut(_translate("HTMLEditor", "Ctrl+D"))
        self.actionWeb_Browser.setText(_translate("HTMLEditor", "Web Browser"))
        self.actionHTML_To_Text.setText(_translate("HTMLEditor", "HTML To Text"))
        self.actionPreferences.setText(_translate("HTMLEditor", "&Preferences"))
        self.actionPreferences.setShortcut(_translate("HTMLEditor", "Ctrl+P"))
        self.actionSave_All.setText(_translate("HTMLEditor", "Save All"))
        self.actionHTML_and_CSS.setText(_translate("HTMLEditor", "HTML and CSS"))
        self.actionSave_Preferences.setText(_translate("HTMLEditor", "Save Preferences"))
        self.actionLoad_Preferences.setText(_translate("HTMLEditor", "Load Preferences"))
        self.actionCloseCurrent.setText(_translate("HTMLEditor", "Close Current"))
        self.actionNew_CSS.setText(_translate("HTMLEditor", "New CSS"))

